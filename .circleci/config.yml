version: 2.1
jobs:
  build:
    docker:
      - image: circleci/buildpack-deps:stretch
    resource_class: large
    environment:
      SERVER_IMAGE_NAME: itsdevin/bow-mark-server
      CLIENT_IMAGE_NAME: itsdevin/bow-mark-client
      CLIENT_CONCRETE_IMAGE_NAME: itsdevin/bow-mark-concrete-client
    working_directory: ~/app
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Build Docker images
          command: |
            docker build -t $SERVER_IMAGE_NAME:latest ./server

            touch ./client/.env.local
            echo "SSR_API_URL=https://paving.bowmark.ca/graphql" | cat >> ./client/.env.local
            echo "NEXT_PUBLIC_APP_NAME=Paving" | cat >> ./client/.env.local
            echo "NEXT_PUBLIC_API_URL=https://paving.bowmark.ca/graphql" | cat >> ./client/.env.local
            echo "NEXT_PUBLIC_WS_API_URL=wss://paving.bowmark.ca/graphql" | cat >> ./client/.env.local
            echo "NEXT_PUBLIC_ANALYTICS_ID=G-ZJFP23D24Y" | cat >> ./client/.env.local
            rm ./client/public/manifest.json
            cp ./client/public/manifest-paving.json ./client/public/manifest.json
            docker build -t $CLIENT_IMAGE_NAME:latest ./client

            touch ./client/.env.local
            echo "SSR_API_URL=https://concrete.bowmark.ca/graphql" | cat >> ./client/.env.local
            echo "NEXT_PUBLIC_APP_NAME=Concrete" | cat >> ./client/.env.local
            echo "NEXT_PUBLIC_API_URL=https://concrete.bowmark.ca/graphql" | cat >> ./client/.env.local
            echo "NEXT_PUBLIC_WS_API_URL=wss://concrete.bowmark.ca/graphql" | cat >> ./client/.env.local
            echo "NEXT_PUBLIC_ANALYTICS_ID=G-8798JH035P" | cat >> ./client/.env.local
            rm ./client/public/manifest.json
            cp ./client/public/manifest-concrete.json ./client/public/manifest.json
            docker build -t $CLIENT_CONCRETE_IMAGE_NAME:latest ./client
      - run:
          name: Push Docker Images
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker tag $SERVER_IMAGE_NAME:latest $SERVER_IMAGE_NAME:$CIRCLE_SHA1
            docker push $SERVER_IMAGE_NAME:latest
            docker push $SERVER_IMAGE_NAME:$CIRCLE_SHA1
            docker tag $CLIENT_IMAGE_NAME:latest $CLIENT_IMAGE_NAME:$CIRCLE_SHA1
            docker push $CLIENT_IMAGE_NAME:latest
            docker push $CLIENT_IMAGE_NAME:$CIRCLE_SHA1
            docker tag $CLIENT_CONCRETE_IMAGE_NAME:latest $CLIENT_CONCRETE_IMAGE_NAME:$CIRCLE_SHA1
            docker push $CLIENT_CONCRETE_IMAGE_NAME:latest
            docker push $CLIENT_CONCRETE_IMAGE_NAME:$CIRCLE_SHA1
      - run:
          name: Install envsubst
          command: |
            sudo apt-get update && sudo apt-get -y install gettext-base
      - run:
          name: Install kubectl
          command: |
            curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
            chmod u+x ./kubectl
      - run:
          name: Deploy code
          command: sh ./scripts/ci-deploy.sh
workflows:
  version: 2
  build-master:
    jobs:
      - build:
          filters:
            branches:
              only: master
